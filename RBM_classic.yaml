!obj:pylearn2.train.Train {
  dataset: &train !obj:pylearn2.datasets.moons.Moons {
      num_X: 500,
      noise: 0.01
  },
  model: !obj:pylearn2.models.dbm.dbm.DBM {
    batch_size: &batch_size 50,
    visible_layer: !obj:pylearn2.models.mlp.Tanh {
        layer_name: 'enc_tanh_1',
        dim: 16,
        irange: 0.2,
    },
    hidden_layers: [!obj:pylearn2.models.mlp.Tanh {
        layer_name: 'enc_tanh_2',
        dim: 16,
        irange: 0.2,
    }],
    niter: 10,
  },
  algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
    learning_rate: 0.001,
    batch_size: *batch_size,
    monitoring_dataset: {
      train: *train,
    }, cost: !obj:pylearn2.costs.dbm.BaseCD {
      num_chains: 20,
      num_gibbs_steps: 1,
      supervised: False
    }
  },
  extensions: [
    !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
      channel_name: 'train_cost',
      save_path: '${PYLEARN2_TRAIN_FILE_FULL_STEM}_best_cost.pkl'
    },
    !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {
      start: 10,
      saturate: 200,
      decay_factor: 0.01,
    }
  ],
  save_path: '${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl',
  save_freq: 10,
}
